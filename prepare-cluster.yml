apiVersion: v1
kind: ServiceAccount
metadata:
  name: dask-executor-sa
  namespace: default
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dask-executor-cluster-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  - services/status
  - persistentvolumeclaims/status
  verbs:
  - get
  - patch
  - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dask-executor-cluster-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dask-executor-cluster-role
subjects:
- kind: ServiceAccount
  name: dask-executor-sa
  namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dask-test
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dask-test
  template:
    metadata:
      labels:
        app: dask-test
    spec:
      serviceAccountName: dask-executor-sa
      automountServiceAccountToken: true
      containers:
      - image: python:3.8
        imagePullPolicy: Always
        args:
        - while true; do sleep 30; done;
        command:
        - /bin/bash
        - -c
        - --
        name: dask-test
        resources: {}
        securityContext:
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
      securityContext:
        fsGroup: 0

---
apiVersion: v1
kind: Service
metadata:
  name: dask-test
  namespace: default
spec:
  ports:
  - name: dask-ui
    port: 8787
    protocol: TCP
    targetPort: 8787
  selector:
    app: dask-test
  sessionAffinity: None
  type: ClusterIP
