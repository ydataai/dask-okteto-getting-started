apiVersion: v1
kind: ServiceAccount
metadata:
  name: dask-executor-sa
  namespace: default
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dask-executor-cluster-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - persistentvolumeclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/status
  - services/status
  - persistentvolumeclaims/status
  verbs:
  - get
  - patch
  - update

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dask-executor-cluster-role-binding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dask-executor-cluster-role
subjects:
- kind: ServiceAccount
  name: dask-executor-sa
  namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dask-test
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dask-test
  template:
    metadata:
      labels:
        app: dask-test
    spec:
      serviceAccountName: dask-executor-sa
      automountServiceAccountToken: true
      containers:
      - image: python:3.8
        imagePullPolicy: Always
        args:
        - while true; do sleep 30; done;
        command:
        - /bin/bash
        - -c
        - --
        name: dask-test
        resources: {}
        securityContext:
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
      securityContext:
        fsGroup: 0

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   annotations:
#     deployment.kubernetes.io/revision: "1"
#     dev.okteto.com/auto-create: up
#     dev.okteto.com/deployment: '{"metadata":{"name":"dask-executor","namespace":"default","creationTimestamp":null,"annotations":{"dev.okteto.com/auto-create":"up"}},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"dask-executor"}},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"dask-executor"}},"spec":{"containers":[{"name":"dev","image":"okteto/python:3","resources":{},"imagePullPolicy":"Always"}],"terminationGracePeriodSeconds":0}},"strategy":{"type":"Recreate"}},"status":{}}'
#     dev.okteto.com/revision: "1"
#     dev.okteto.com/version: "1.0"
#   generation: 2
#   labels:
#     dev.okteto.com: "true"
#   name: dask-executor
#   namespace: default
# spec:
#   progressDeadlineSeconds: 600
#   replicas: 1
#   selector:
#     matchLabels:
#       app: dask-executor
#   strategy:
#     type: Recreate
#   template:
#     metadata:
#       labels:
#         app: dask-executor
#         dev.okteto.com: "true"
#         interactive.dev.okteto.com: dask-executor
#     spec:
#       serviceAccountName: dask-executor-sa
#       automountServiceAccountToken: true
#       affinity:
#         podAffinity:
#           requiredDuringSchedulingIgnoredDuringExecution:
#           - labelSelector:
#               matchLabels:
#                 interactive.dev.okteto.com: dask-executor
#             topologyKey: kubernetes.io/hostname
#       containers:
#       - args:
#         - -r
#         - -s
#         - authorized_keys:/var/okteto/remote/authorized_keys
#         command:
#         - /var/okteto/bin/start.sh
#         env:
#         - name: OKTETO_NAMESPACE
#           value: default
#         - name: OKTETO_NAME
#           value: dask-executor
#         image: okteto/python:3
#         imagePullPolicy: Always
#         name: dev
#         resources: {}
#         securityContext:
#           runAsGroup: 0
#           runAsNonRoot: false
#           runAsUser: 0
#         terminationMessagePath: /dev/termination-log
#         terminationMessagePolicy: File
#         volumeMounts:
#         - mountPath: /var/syncthing
#           name: okteto-dask-executor
#           subPath: syncthing
#         - mountPath: /var/okteto/remote
#           name: okteto-dask-executor
#           subPath: okteto-remote
#         - mountPath: /root/.cache/pip
#           name: okteto-dask-executor
#           subPath: data/root/.cache/pip
#         - mountPath: /usr/src/app
#           name: okteto-dask-executor
#           subPath: src
#         - mountPath: /var/syncthing/secret/
#           name: okteto-sync-secret
#         - mountPath: /var/okteto/secret/
#           name: okteto-dev-secret
#         - mountPath: /var/okteto/bin
#           name: okteto-bin
#       dnsPolicy: ClusterFirst
#       initContainers:
#       - command:
#         - sh
#         - -c
#         - cp /usr/local/bin/* /okteto/bin
#         image: okteto/bin:1.2.18
#         imagePullPolicy: IfNotPresent
#         name: okteto-bin
#         resources:
#           limits:
#             cpu: 30m
#             memory: 30Mi
#           requests:
#             cpu: 10m
#             memory: 10Mi
#         terminationMessagePath: /dev/termination-log
#         terminationMessagePolicy: File
#         volumeMounts:
#         - mountPath: /okteto/bin
#           name: okteto-bin
#       restartPolicy: Always
#       schedulerName: default-scheduler
#       securityContext:
#         fsGroup: 0
#       terminationGracePeriodSeconds: 0
#       volumes:
#       - name: okteto-sync-secret
#         secret:
#           defaultMode: 420
#           items:
#           - key: config.xml
#             mode: 292
#             path: config.xml
#           - key: cert.pem
#             mode: 292
#             path: cert.pem
#           - key: key.pem
#             mode: 292
#             path: key.pem
#           secretName: okteto-dask-executor
#       - name: okteto-dask-executor
#         persistentVolumeClaim:
#           claimName: okteto-dask-executor
#       - name: okteto-dev-secret
#         secret:
#           defaultMode: 420
#           items:
#           - key: dev-secret-authorized_keys
#             mode: 420
#             path: authorized_keys
#           secretName: okteto-dask-executor
#       - emptyDir: {}
#         name: okteto-bin

---
apiVersion: v1
kind: Service
metadata:
  name: dask-test
  namespace: default
spec:
  ports:
  - name: dask-ui
    port: 8787
    protocol: TCP
    targetPort: 8787
  selector:
    app: dask-test
  sessionAffinity: None
  type: ClusterIP
